@page
@model PizzaStoreManagement.Pages.OrdersDetailView.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>OrderDetails</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="OrderDetails.OrderId" class="control-label"></label>
                <input asp-for="OrderDetails.OrderId" value="@Model.Id" class="form-control" readonly></>
            </div>
            <div class="form-group">
                <label asp-for="OrderDetails.ProductId" class="control-label"></label>
                <select id="ProductId" asp-for="OrderDetails.ProductId" class="form-control" asp-items="ViewBag.ProductId" onchange="updateUnitPrice()">
                    <option value="">-- Select Product --</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="OrderDetails.UnitPrice" class="control-label"></label>
                <input id="UnitPrice" asp-for="OrderDetails.UnitPrice" class="form-control" readonly />
                <span asp-validation-for="OrderDetails.UnitPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderDetails.Quantity" class="control-label"></label>
                <input asp-for="OrderDetails.Quantity" class="form-control" />
                <span asp-validation-for="OrderDetails.Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index" asp-route-id="@Model.Id">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function updateUnitPrice() {
            var productId = document.getElementById("ProductId").value;
            if (productId) {
                // Assuming you have the product prices available in a JavaScript object `productPrices`
                var productPrices = @Html.Raw(Json.Serialize(Model.ProductPrices));

                // Find the price based on productId
                var price = productPrices[productId];

                if (price) {
                    document.getElementById("UnitPrice").value = price;
                } else {
                    document.getElementById("UnitPrice").value = 'Price not available';
                }
            } else {
                document.getElementById("UnitPrice").value = '';
            }
        }
    </script>
}
